using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO.Ports;
using System.Data;
using System.Data.SqlClient;
using Microsoft.ApplicationBlocks.Data;

namespace AD
{
    public class ADCentrales
    {

        private const string PROC_CENTRALES_CREAMODIFICA = "PT_Central_CreaModifica";
        private const string PROC_CENTRALES_SELECT = "PT_Central_Select";
        private const string PROC_TELEFONO_CREA = "USP_TelefonoCrea";

         public ADCentrales()
        {
 
        }


         public bool setCentralCreaModifica(String NombreCentral, String ModeloCentral, String TipoFecha, Int32 PI_Fecha, Int32 CD_Fecha, Int32 PI_Discado, Int32 CD_Discado, Int32 PI_Usuario, Int32 CD_Usuario, Int32 PI_Anexo, Int32 CD_Anexo, Int32 PI_Hora, Int32 CD_Hora, Int32 PI_Tiempo, Int32 CD_Tiempo)
         {

             
           
             try
             {
                 SqlParameter[] parametros = {
                                                 new SqlParameter("@NombreCentral",NombreCentral),
                                                 new SqlParameter("@ModeloCentral",ModeloCentral),
                                                 new SqlParameter("@TipoFecha",TipoFecha),
                                                 new SqlParameter("@PI_Fecha",PI_Fecha),
                                                 new SqlParameter("@CD_Fecha",CD_Fecha),
                                                 new SqlParameter("@PI_Discado",PI_Discado),
                                                 new SqlParameter("@CD_Discado",CD_Discado),
                                                 new SqlParameter("@PI_Usuario",PI_Usuario),
                                                 new SqlParameter("@CD_Usuario",CD_Usuario),
                                                 new SqlParameter("@PI_Anexo",PI_Anexo),
                                                 new SqlParameter("@CD_Anexo",CD_Anexo),
                                                 new SqlParameter("@PI_Hora",PI_Hora),
                                                 new SqlParameter("@CD_Hora",CD_Hora),
                                                 new SqlParameter("@PI_Tiempo",PI_Tiempo),
                                                 new SqlParameter("@CD_Tiempo",CD_Tiempo)                 
                                             };


                 SqlHelper.ExecuteNonQuery(Conexion.connectionString(), PROC_CENTRALES_CREAMODIFICA, parametros);

                 return true;
             }
             catch
             {
                 return false;
             }
             
         }

         public DataTable getCentral(String nombreCentral, String modelo)
         {

             SqlParameter[] parametros = {
                                             new SqlParameter("@NombreCentral",nombreCentral),
                                             new SqlParameter("@Modelo",modelo)
                                         };

             return SqlHelper.ExecuteDataset(Conexion.connectionString(), PROC_CENTRALES_SELECT, parametros).Tables[0];


         }


         public bool saveLlamada(String anexo, string discado,DateTime fecha, DateTime hora,string tiempo,string codigo,decimal precioventa, decimal preciocosto,int productoId, int monedaId, int usuarioID, int minutos, string anexoregistro,decimal descuento,int tipo,int troncalid)
         {

             SqlParameter[] parametros = {
                                             new SqlParameter("@TelefonoID",""),
                                             new SqlParameter("@ANEXO",anexo),
                                             new SqlParameter("@DISCADO",discado),
                                             new SqlParameter("@FECHA",fecha),
                                             new SqlParameter("@HORA",hora),
                                             new SqlParameter("@TIEMPO",tiempo),
                                             new SqlParameter("@CODIGO",codigo),
                                             new SqlParameter("@PRECIOVENTA",precioventa),
                                             new SqlParameter("@PRECIOCOSTO",preciocosto),
                                             new SqlParameter("@PRODUCTOID",productoId),
                                             new SqlParameter("@MONEDAID",monedaId),
                                             new SqlParameter("@UsuarioId",usuarioID),
                                             new SqlParameter("@Minutos",minutos),
                                             new SqlParameter("@AnexoRegistro",anexoregistro),
                                             new SqlParameter("@Descuento",descuento),
                                             new SqlParameter("@Tipo",tipo),
                                             new SqlParameter("@TroncalID",troncalid)
                                         };

             try
             {
                 SqlHelper.ExecuteNonQuery(Conexion.connectionString(), PROC_TELEFONO_CREA, parametros);
                 return true;
             }
             catch(Exception ex)
             {
                 throw ex;
                 //Console.WriteLine(ex.Message);
                 //return false;
             }

         }

         public DataTable centrales()
         {
             String query = "select nombrecentral from Centrales group by NombreCentral order by NombreCentral";

             return SqlHelper.ExecuteDataset(Conexion.connectionString(), CommandType.Text, query).Tables[0];

         }

         public DataTable detallecentrales(String nombreCentral)
         {

             StringBuilder q = new StringBuilder();

             q.Append("SELECT NombreCentral, ModeloCentral, TipoFecha, PI_Fecha, CD_Fecha, PI_Discado, CD_Discado, ");
             q.Append("PI_Usuario,  CD_Usuario, PI_Anexo, CD_Anexo, PI_Hora, CD_Hora, PI_Tiempo, CD_Tiempo  ");
             q.Append("FROM Centrales WHERE NombreCentral = '" + nombreCentral + "'");

             String query = q.ToString();

             return SqlHelper.ExecuteDataset(Conexion.connectionString(), CommandType.Text, query).Tables[0];

         }


    }
}
